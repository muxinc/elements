{
  "version": 3,
  "sources": ["../src/index.ts", "../src/ads-manager.ts"],
  "sourcesContent": ["/* eslint @typescript-eslint/triple-slash-reference: \"off\" */\n/// <reference path=\"../../../node_modules/mux-embed/dist/types/mux-embed.d.ts\" preserve=\"true\" />\nimport MuxVideoElement from '@mux/mux-video';\n/** @TODO publish types for package to use here (CJP) */\n// @ts-ignore\nimport mux from '@mux/mux-data-google-ima';\nimport { MuxAdManagerConfig, MuxAdManager } from './ads-manager';\nimport type { MuxDataSDK } from '@mux/playback-core';\n\nconst serializeAttributes = (attrs = {}) => {\n  return (\n    ' ' +\n    Object.entries(attrs)\n      .map(([key, value]) => (value === '' ? `${key}` : `${key}=\"${value}\"`))\n      .join(' ')\n  );\n};\n\nconst Attributes = {\n  AD_TAG_URL: 'adtagurl',\n  AD_BREAK: 'adbreak',\n  ALLOW_AD_BLOCKER: 'allow-ad-blocker',\n} as const;\n\nclass MuxVideoAds extends MuxVideoElement {\n  #muxAdManager: MuxAdManager | undefined;\n  #lastCurrentime: number | undefined;\n\n  static getTemplateHTML = (attrs: Record<string, string>) => {\n    return `\n<style>\n:host {\n  aspect-ratio: var(--media-aspect-ratio, 16 / 9);\n  display: inline-block;\n  line-height: 0;\n  width: 100%;\n  height: 100%;\n  display: block;\n}\nvideo {\n  display: block;\n  max-width: 100%;\n  max-height: 100%;\n  min-width: 100%;\n  min-height: 100%;\n  object-fit: var(--media-object-fit, contain);\n  object-position: var(--media-object-position, 50% 50%);\n}\nvideo::-webkit-media-text-track-container {\n  transform: var(--media-webkit-text-track-transform);\n  transition: var(--media-webkit-text-track-transition);\n}\n#mainContainer {\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\n#adContainer {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    bottom: 0px;\n    right: 0px;\n    z-index: -1;\n    width: 100%;\n    height: 100%;\n}\n#mainContainer #adContainer.ad-playing {\n    z-index: 2;\n}\n#imaUnavailableMessage {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  background: rgba(0, 0, 0, 0.75);\n  color: white;\n  font-size: 0.9em;\n  text-align: center;\n  line-height: 1.4;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  align-content: center;\n  cursor: not-allowed;\n\n  h4{\n    font-size: 1rem;\n    margin:0;\n  }\n}\n</style>\n<div id=\"mainContainer\">\n    <slot name=\"media\">\n      <video id=\"contentElement\" ${serializeAttributes(attrs)}></video>\n    </slot>\n  <div id=\"adContainer\"></div>\n</div>\n<slot></slot>\n  `;\n  };\n\n  constructor() {\n    super();\n\n    const resizeObserver = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        const { width, height } = entry.contentRect;\n        if (width > 0 && height > 0) {\n          this.#muxAdManager?.updateAdsManagerSize(width, height);\n        }\n      }\n    });\n    resizeObserver.observe(this);\n  }\n\n  connectedCallback(): void {\n    console.log('MuxVideoAds connectedCallback');\n    super.connectedCallback();\n\n    if (!MuxAdManager.isGoogleImaSDKAvailable()) {\n      console.error('Missing google.ima SDK. Make sure you include it via a script tag.');\n      if (!this.allowAdBlocker) {\n        this.#showAdBlockedMessage();\n      } else {\n        this.#adBreak = false;\n      }\n      return;\n    }\n\n    console.log('AdBreak connectedCallbk', this.adBreak, this.adTagUrl);\n\n    const config: MuxAdManagerConfig = {\n      videoElement: this,\n      contentVideoElement: this.nativeEl,\n      originalSize: this.getBoundingClientRect(),\n      adContainer: this.#adContainer,\n    };\n\n    this.#muxAdManager = new MuxAdManager(config);\n    this.#muxAdManager.setupAdsManager();\n\n    this.#setupEventListeners();\n  }\n\n  #showAdBlockedMessage() {\n    const fallback = document.createElement('div');\n    fallback.id = 'imaUnavailableMessage';\n    fallback.innerHTML = `\n  <h4>Ad experience unavailable.</h4>\n  <span>This may be due to a missing SDK, network issue, or ad blocker.</span>\n`;\n    this.shadowRoot?.getElementById('mainContainer')?.appendChild(fallback);\n  }\n\n  #setupEventListeners(): void {\n    this.addEventListener(\n      'loadedmetadata',\n      () => {\n        console.log('loadedmetadata', {\n          adTagUrl: this.adTagUrl,\n          isReady: this.#muxAdManager?.isReadyForInitialization(),\n        });\n        if (this.adTagUrl && this.#muxAdManager?.isReadyForInitialization()) {\n          this.#muxAdManager.initializeAdDisplayContainer();\n          const prevPaused = this.nativeEl.paused;\n          if (!this.nativeEl.paused) {\n            this.nativeEl.pause();\n          }\n          if (!prevPaused) {\n            this.#muxAdManager.requestAds(this.adTagUrl);\n          }\n        }\n      },\n      { once: true }\n    );\n\n    this.nativeEl.addEventListener('play', (_event) => {\n      if (this.adBreak && !this.#isUsingSameVideoElement) {\n        console.warn('Video play prevented during ad break');\n        this.nativeEl.pause();\n        return;\n      }\n    });\n\n    this.nativeEl.addEventListener('seeking', (_event) => {\n      if (this.adBreak && !this.#isUsingSameVideoElement) {\n        console.warn('Seek prevented during ad break');\n        this.nativeEl.currentTime = this.#lastCurrentime ?? 0;\n        this.nativeEl.dispatchEvent(new Event('timeupdate'));\n      }\n    });\n\n    this.addEventListener('onAdsCompleted', () => {\n      this.#adBreak = false;\n      this.dispatchEvent(new Event('durationchange'));\n      this.adTagUrl = undefined;\n      this.#setAdContainerPlaying(false);\n      this.#dispatchAdBreakChange(false);\n      this.addEventListener('ended', this.onEnded, { once: true });\n      setTimeout(() => {\n        this.play();\n      }, 100);\n    });\n\n    //TODO: should we move this to muxplayer?\n    globalThis.addEventListener('mediaenterfullscreenrequest', () => {\n      this.#muxAdManager?.updateViewMode(true);\n    });\n\n    //TODO: should we move this to muxplayer?\n    globalThis.addEventListener('mediaexitfullscreenrequest', () => {\n      this.#muxAdManager?.updateViewMode(false);\n    });\n  }\n\n  get #adContainer() {\n    return this.shadowRoot?.getElementById('adContainer') as HTMLElement;\n  }\n\n  get adTagUrl(): string | undefined {\n    return this.getAttribute(Attributes.AD_TAG_URL) ?? undefined;\n  }\n\n  set adTagUrl(value: string | undefined) {\n    if (value === this.adTagUrl) return;\n    if (value === undefined) {\n      this.removeAttribute(Attributes.AD_TAG_URL);\n      return;\n    }\n    this.setAttribute(Attributes.AD_TAG_URL, value);\n  }\n\n  get adBreak(): boolean {\n    return this.hasAttribute(Attributes.AD_BREAK);\n  }\n\n  set #adBreak(val: boolean) {\n    if (val === this.adBreak) return;\n    this.toggleAttribute(Attributes.AD_BREAK, !!val);\n    this.#dispatchAdBreakChange(val);\n  }\n\n  #dispatchAdBreakChange(isAdBreak: boolean): void {\n    this.dispatchEvent(\n      new CustomEvent('adbreakchange', {\n        detail: { isAdBreak },\n        composed: true,\n        bubbles: true,\n      })\n    );\n  }\n\n  onEnded() {\n    if (this.adTagUrl && this.#muxAdManager?.isReadyForComplete()) {\n      this.#muxAdManager.contentComplete();\n    }\n  }\n\n  handleEvent(event: Event): void {\n    if (this.adBreak && event.type === 'ended') {\n      return;\n    }\n    super.handleEvent(event);\n  }\n\n  play() {\n    if (this.adTagUrl && this.adBreak) {\n      if (this.#muxAdManager?.isAdPaused()) {\n        this.#muxAdManager?.resumeAdManager();\n      }\n      return Promise.resolve().then(() => {\n        this.dispatchEvent(new Event('play'));\n        this.dispatchEvent(new Event('playing'));\n      });\n    }\n\n    const adBlockerDetected = !this.#muxAdManager?.adsLoader;\n\n    const adBlockerAndAllowed = adBlockerDetected && this.allowAdBlocker;\n\n    if (this.adTagUrl && !adBlockerAndAllowed) {\n      this.#lastCurrentime = this.nativeEl.currentTime;\n      this.#adBreak = true;\n      this.dispatchEvent(new Event('durationchange'));\n      this.#setAdContainerPlaying(true);\n\n      if (this.#muxAdManager?.isReadyForInitialization()) {\n        this.#muxAdManager.initializeAdDisplayContainer();\n      }\n\n      if (this.#muxAdManager?.isReadyForInitialization() || this.#muxAdManager?.isInitialized()) {\n        this.#muxAdManager.requestAds(this.adTagUrl);\n        // NOTE: Still need to initiate play() if we're about to request ads that we intend to play.\n        return super.play();\n      } else if (this.#muxAdManager?.isAdPaused()) {\n        this.#muxAdManager.resumeAdManager();\n      }\n\n      return Promise.resolve().then(() => {\n        this.dispatchEvent(new Event('play'));\n      });\n    }\n    this.#setAdContainerPlaying(false);\n    return super.play();\n  }\n\n  pause(): void {\n    if (this.adBreak) {\n      this.#muxAdManager?.pauseAdManager();\n    }\n    super.pause();\n  }\n\n  get paused(): boolean {\n    if (this.adBreak) {\n      return this.#muxAdManager?.isAdPaused() ?? false;\n    }\n    return super.paused;\n  }\n\n  #setAdContainerPlaying(isPlaying: boolean): void {\n    this.#adContainer?.classList.toggle('ad-playing', isPlaying);\n  }\n\n  get #isUsingSameVideoElement() {\n    if (this.#muxAdManager) {\n      return this.#muxAdManager.isUsingSameVideoElement();\n    }\n    return undefined;\n  }\n\n  get duration(): number {\n    if (this.adBreak) {\n      return this.#muxAdManager?.getDuration() ?? 0;\n    }\n    return super.duration;\n  }\n\n  get currentTime(): number {\n    if (this.adBreak) {\n      return this.#muxAdManager?.getCurrentTime() ?? 0;\n    }\n    return super.currentTime;\n  }\n\n  set currentTime(val: number) {\n    if (this.adBreak) {\n      console.error('CANNOT SEEK DURING AD BREAK');\n      // this.dispatchEvent(new Event('timeupdate'));\n      return;\n    }\n    super.currentTime = val;\n  }\n\n  get volume(): number {\n    if (this.adBreak) {\n      return this.#muxAdManager?.getVolume() ?? 0;\n    }\n    return super.volume;\n  }\n\n  set volume(val: number) {\n    if (this.adBreak) {\n      this.#muxAdManager?.setVolume(val);\n    }\n    super.volume = val;\n  }\n\n  get muted(): boolean {\n    if (this.adBreak) {\n      return !this.#muxAdManager?.getVolume();\n    }\n    return super.muted;\n  }\n\n  set muted(val: boolean) {\n    if (this.adBreak) {\n      this.#muxAdManager?.setVolume(val ? 0 : this.volume);\n    }\n    super.muted = val;\n  }\n\n  get readyState(): number {\n    if (this.adBreak) {\n      return 4;\n    }\n    return super.readyState;\n  }\n\n  async requestPictureInPicture(): Promise<PictureInPictureWindow> {\n    if (this.adBreak) {\n      throw new Error('Cannot use PiP while ads are playing!');\n    }\n    return super.requestPictureInPicture();\n  }\n\n  get muxDataSDK() {\n    return mux as MuxDataSDK;\n  }\n\n  get muxDataSDKOptions() {\n    return {\n      imaAdsLoader: this.#muxAdManager?.adsLoader,\n    };\n  }\n\n  set muxDataKeepSession(val: boolean) {\n    this.toggleAttribute('mux-data-keep-session', Boolean(val));\n  }\n\n  get muxDataKeepSession(): boolean {\n    return this.hasAttribute('mux-data-keep-session');\n  }\n\n  get allowAdBlocker(): boolean {\n    return this.hasAttribute(Attributes.ALLOW_AD_BLOCKER);\n  }\n\n  set allowAdBlocker(val: boolean) {\n    this.toggleAttribute(Attributes.ALLOW_AD_BLOCKER, !!val);\n  }\n}\n\ntype MuxVideoAdsElementType = typeof MuxVideoAds;\ndeclare global {\n  var MuxVideoAds: MuxVideoAdsElementType; // eslint-disable-line\n}\n\nif (globalThis.customElements && !globalThis.customElements.get('mux-video-ads')) {\n  globalThis.customElements.define('mux-video-ads', MuxVideoAds);\n  globalThis.MuxVideoAds = MuxVideoAds;\n}\n\nexport default MuxVideoAds;\n", "/* eslint @typescript-eslint/triple-slash-reference: \"off\" */\n/// <reference types=\"google_interactive_media_ads_types\" preserve=\"true\"/>\n\nimport MuxVideoAdsElement from './index.js';\n\nexport type MuxAdManagerConfig = {\n  videoElement: MuxVideoAdsElement;\n  contentVideoElement: HTMLVideoElement;\n  originalSize: DOMRect;\n  adContainer: HTMLElement;\n};\n\ntype VideoBackup = {\n  contentTime: number;\n  wasPlaying: boolean;\n  originalSrc: string;\n};\n\nexport class MuxAdManager {\n  #adDisplayContainer: google.ima.AdDisplayContainer | undefined;\n  #adsLoader: google.ima.AdsLoader | undefined;\n  #adsManager: google.ima.AdsManager | undefined;\n  #ad: google.ima.Ad | undefined | null;\n  #adProgressData: google.ima.AdProgressData | undefined | null;\n  #adPaused = false;\n  #videoPlayed = false;\n  #videoElement: HTMLVideoElement;\n  #customMediaElement: MuxVideoAdsElement;\n  #viewMode: google.ima.ViewMode;\n  #videoBackup: VideoBackup | null = null;\n  #originalSize: DOMRect;\n  #adContainer: HTMLElement;\n\n  constructor(config: MuxAdManagerConfig) {\n    this.#customMediaElement = config.videoElement;\n    this.#videoElement = config.contentVideoElement;\n    this.#videoPlayed = !this.#videoElement.paused;\n    if (!this.#videoPlayed) {\n      this.#videoElement.addEventListener(\n        'play',\n        () => {\n          this.#videoPlayed = true;\n        },\n        { once: true }\n      );\n    }\n    this.#viewMode = google.ima.ViewMode.NORMAL;\n    this.#originalSize = config.originalSize;\n    this.#adContainer = config.adContainer;\n  }\n\n  setupAdsManager() {\n    if (!this.#adDisplayContainer) {\n      this.#adDisplayContainer = new google.ima.AdDisplayContainer(this.#adContainer, this.#videoElement);\n\n      this.#adsLoader = new google.ima.AdsLoader(this.#adDisplayContainer);\n      console.log('adsLoader', this.#adsLoader);\n      this.#adsLoader.addEventListener(\n        google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n        (adsManagerLoadedEvent: google.ima.AdsManagerLoadedEvent) => {\n          console.log('Ad Manager loaded', adsManagerLoadedEvent);\n          const adsRenderingSettings = new google.ima.AdsRenderingSettings();\n          this.#adsManager = adsManagerLoadedEvent.getAdsManager(this.#videoElement, adsRenderingSettings);\n          console.log('adsManager', this.#adsManager);\n          this.#startAdsManager();\n        },\n        false\n      );\n\n      this.#adsLoader.addEventListener(\n        google.ima.AdErrorEvent.Type.AD_ERROR,\n        (adErrorEvent: google.ima.AdErrorEvent) => {\n          console.log('AD_ERROR Loader', adErrorEvent);\n          this.#customMediaElement.dispatchEvent(new Event('onAdsCompleted'));\n        },\n        false\n      );\n    }\n  }\n\n  #startAdsManager() {\n    console.log('startAdsManager', this.#adsManager);\n    this.#adsManager?.addEventListener(google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED, () => {\n      console.log('CONTENT_PAUSE_REQUESTED');\n      const currentTime = this.#customMediaElement.currentTime;\n      const wasPlaying = !this.#customMediaElement.paused;\n\n      if (!this.#videoElement?.paused) {\n        this.#videoElement?.pause();\n      }\n\n      this.#adPaused = false;\n\n      this.#videoBackup = {\n        contentTime: currentTime,\n        wasPlaying: wasPlaying,\n        originalSrc: this.#customMediaElement.src,\n      };\n\n      if (this.isUsingSameVideoElement()) {\n        this.#customMediaElement.muxDataKeepSession = true;\n        this.#customMediaElement.unload();\n        this.#customMediaElement.muxDataKeepSession = false;\n      } else {\n        this.#videoElement.style.display = 'none';\n      }\n    });\n\n    this.#adsManager?.addEventListener(\n      google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n      () => {\n        console.log('CONTENT_RESUME_REQUESTED');\n        if (this.#videoBackup && this.isUsingSameVideoElement()) {\n          this.#customMediaElement.muxDataKeepSession = true;\n          this.#customMediaElement.load();\n          this.#customMediaElement.muxDataKeepSession = false;\n\n          // Restore content position\n          if (this.#videoBackup?.contentTime) {\n            this.#customMediaElement.currentTime = this.#videoBackup.contentTime;\n          }\n        } else {\n          // Show the video element again\n          this.#videoElement.style.display = '';\n        }\n\n        this.#videoBackup = null;\n\n        this.#adProgressData = undefined;\n        this.#ad = undefined;\n        this.#customMediaElement.dispatchEvent(new Event('durationchange'));\n        this.#customMediaElement.dispatchEvent(new Event('onAdsCompleted'));\n      },\n      false\n    );\n\n    this.#adsManager?.addEventListener(\n      google.ima.AdErrorEvent.Type.AD_ERROR,\n      console.log.bind(null, 'AD_ERROR Manager'),\n      false\n    );\n\n    this.#adsManager?.addEventListener(\n      google.ima.AdEvent.Type.CLICK,\n      (_adEvent: google.ima.AdEvent) => {\n        this.updateViewMode(false);\n      },\n      false\n    );\n\n    this.#adsManager?.addEventListener(\n      google.ima.AdEvent.Type.LOADED,\n      (adEvent: google.ima.AdEvent) => {\n        console.log('loaded', adEvent);\n        this.#ad = adEvent.getAd();\n        this.#customMediaElement.dispatchEvent(new Event('durationchange'));\n        this.#customMediaElement.dispatchEvent(new Event('timeupdate'));\n        this.#customMediaElement.dispatchEvent(new Event('adbreaktotaladschange'));\n      },\n      false\n    );\n\n    this.#adsManager?.addEventListener(\n      google.ima.AdEvent.Type.STARTED,\n      (adEvent: google.ima.AdEvent) => {\n        console.log('started', adEvent);\n        this.#ad = adEvent.getAd();\n        this.#customMediaElement.dispatchEvent(new Event('playing'));\n        this.#customMediaElement.dispatchEvent(new Event('adbreakadpositionchange'));\n      },\n      false\n    );\n\n    this.#adsManager?.addEventListener(google.ima.AdEvent.Type.PAUSED, () => {\n      console.log('Ads paused');\n      this.#adPaused = true;\n      this.#customMediaElement.dispatchEvent(new Event('pause'));\n    });\n\n    this.#adsManager?.addEventListener(google.ima.AdEvent.Type.RESUMED, () => {\n      console.log('Ads resumed');\n      this.#adPaused = false;\n    });\n\n    this.#adsManager?.addEventListener(\n      google.ima.AdEvent.Type.AD_PROGRESS,\n      (adProgressEvent: google.ima.AdEvent) => {\n        const prevDuration = this.#customMediaElement.duration;\n        this.#adProgressData = adProgressEvent.getAdData() as google.ima.AdProgressData;\n        if (prevDuration !== this.#customMediaElement.duration) {\n          this.#customMediaElement.dispatchEvent(new Event('durationchange'));\n        }\n        this.#customMediaElement.dispatchEvent(new Event('timeupdate'));\n      },\n      false\n    );\n\n    this.#adsManager?.addEventListener(\n      google.ima.AdEvent.Type.VOLUME_CHANGED,\n      () => {\n        console.log('volumeChanged');\n        this.#customMediaElement.dispatchEvent(new Event('volumechange'));\n      },\n      false\n    );\n\n    this.#adsManager?.addEventListener(\n      google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n      () => {\n        console.log('allAdsCompleted');\n      },\n      false\n    );\n\n    const startAds = () => {\n      this.#adsManager?.init(this.#originalSize.width, this.#originalSize.height, this.#viewMode);\n      this.#adsManager?.start();\n    };\n\n    try {\n      if (this.#videoPlayed) {\n        startAds();\n      } else {\n        this.#videoElement.addEventListener(\n          'play',\n          () => {\n            this.#videoPlayed = true;\n            // NOTE: Since this condition is specifically to account for preroll  cases where ads should start (and start playing),\n            // go ahead and immediately pause to avoid slower async cases where some amount of main content plays before ads playback\n            /// kicks in. This can also create confusing/complex scenarios in Mux Data views where the main content plays before the preroll.\n            // Additionally, this quick fix may not generalize for ads content that does not include preroll. (CJP)\n            this.#videoElement.pause();\n            startAds();\n          },\n          { once: true }\n        );\n      }\n    } catch {\n      // NOTE: This will have more robust state cleanup on this exception case in the official implementation (CJP).\n      console.error(\n        'Failed to start ads! Make sure you include the google.ima SDK as a script tag and that it is loaded before attempting ad playback'\n      );\n    }\n  }\n\n  static isGoogleImaSDKAvailable() {\n    if (!('google' in globalThis && 'ima' in globalThis['google'])) {\n      console.error('Missing google.ima SDK. Make sure you include it via a script tag.');\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isReadyForInitialization() {\n    return this.#adDisplayContainer && !this.#adsManager;\n  }\n\n  isInitialized() {\n    return this.#adDisplayContainer && this.#adsManager;\n  }\n\n  isReadyForComplete() {\n    return this.#adsLoader && this.#adsManager;\n  }\n\n  initializeAdDisplayContainer() {\n    this.#adDisplayContainer?.initialize();\n  }\n\n  requestAds(adTagUrl: string) {\n    console.log('requestAds', adTagUrl);\n    const adsRequest = new google.ima.AdsRequest();\n    adsRequest.adTagUrl = adTagUrl;\n    this.#adsLoader?.requestAds(adsRequest);\n  }\n\n  contentComplete() {\n    this.#adsLoader?.contentComplete();\n  }\n\n  isAdPaused() {\n    return this.#adsManager && this.#adPaused;\n  }\n\n  resumeAdManager() {\n    this.#adsManager?.resume();\n    this.#adPaused = false;\n  }\n\n  pauseAdManager() {\n    if (this.#adsManager) {\n      this.#adsManager.pause();\n    }\n  }\n\n  getDuration() {\n    return this.#adProgressData?.duration ?? this.#ad?.getDuration();\n  }\n\n  getCurrentTime() {\n    return this.#adProgressData?.currentTime;\n  }\n\n  getVolume(): number {\n    return this.#adsManager?.getVolume() ?? 1;\n  }\n\n  setVolume(val: number) {\n    this.#adsManager?.setVolume(val);\n  }\n\n  isUsingSameVideoElement(): boolean {\n    const videoElements = this.#adContainer.querySelectorAll('video');\n    console.log('videoElements', videoElements.length, videoElements);\n    return videoElements.length === 0;\n  }\n\n  updateViewMode(isFullscreen: boolean) {\n    this.#viewMode = isFullscreen ? google.ima.ViewMode.FULLSCREEN : google.ima.ViewMode.NORMAL;\n  }\n\n  updateAdsManagerSize(width: number, height: number) {\n    this.#originalSize = { ...this.#originalSize, width, height };\n    this.#adsManager?.resize(this.#originalSize.width, this.#originalSize.height, this.#viewMode);\n  }\n\n  get adsLoader() {\n    return this.#adsLoader;\n  }\n}\n"],
  "mappings": "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",
  "names": ["MuxVideoElement", "mux", "_adDisplayContainer", "_adsLoader", "_adsManager", "_ad", "_adProgressData", "_adPaused", "_videoPlayed", "_videoElement", "_customMediaElement", "_viewMode", "_videoBackup", "_originalSize", "_adContainer", "_MuxAdManager_instances", "startAdsManager_fn", "MuxAdManager", "config", "__privateAdd", "__privateSet", "__privateGet", "adsManagerLoadedEvent", "adsRenderingSettings", "__privateMethod", "adErrorEvent", "_a", "adTagUrl", "adsRequest", "_b", "_c", "val", "videoElements", "isFullscreen", "width", "height", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "currentTime", "wasPlaying", "_adEvent", "adEvent", "adProgressEvent", "prevDuration", "startAds", "serializeAttributes", "attrs", "key", "value", "Attributes", "_muxAdManager", "_lastCurrentime", "_MuxVideoAds_instances", "showAdBlockedMessage_fn", "setupEventListeners_fn", "adContainer_get", "adBreak_set", "dispatchAdBreakChange_fn", "setAdContainerPlaying_fn", "isUsingSameVideoElement_get", "MuxVideoAds", "MuxVideoElement", "__privateAdd", "entries", "_a", "entry", "width", "height", "__privateGet", "MuxAdManager", "__privateSet", "__privateMethod", "config", "event", "_b", "_c", "_d", "_e", "_f", "_g", "adBlockerAndAllowed", "val", "mux", "fallback", "prevPaused", "_event", "isAdBreak", "isPlaying", "index_default"]
}
