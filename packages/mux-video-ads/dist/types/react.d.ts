import MuxVideoAds from '@mux/mux-video-ads';
import React from 'react';
declare const _default: React.ForwardRefExoticComponent<Omit<React.HTMLAttributes<MuxVideoAds>, "ended" | "error" | "load" | "pause" | "play" | "seeking" | "unload" | "width" | "height" | "init" | "onEnded" | "adTagUrl" | "adBreak" | "handleEvent" | "paused" | "duration" | "currentTime" | "volume" | "muted" | "readyState" | "requestPictureInPicture" | "muxDataSDK" | "muxDataSDKOptions" | "muxDataKeepSession" | "allowAdBlocker" | "muxCastCustomData" | "castCustomData" | "preferCmcd" | "playerInitTime" | "playerSoftwareName" | "playerSoftwareVersion" | "_hls" | "mux" | "errorTranslator" | "src" | "type" | "autoplay" | "preload" | "debug" | "disableTracking" | "disableCookies" | "startTime" | "playbackId" | "maxResolution" | "minResolution" | "renditionOrder" | "programStartTime" | "programEndTime" | "assetStartTime" | "assetEndTime" | "customDomain" | "drmToken" | "playbackToken" | "tokens" | "envKey" | "beaconCollectionDomain" | "streamType" | "targetLiveWindow" | "liveEdgeStart" | "liveEdgeOffset" | "seekable" | "addCuePoints" | "activeCuePoint" | "cuePoints" | "addChapters" | "activeChapter" | "chapters" | "getStartDate" | "currentPdt" | "preferPlayback" | "metadata" | "_hlsConfig" | "logo" | "nativeEl" | "disablePictureInPicture" | "onenterpictureinpicture" | "onleavepictureinpicture" | "playsInline" | "poster" | "videoHeight" | "videoWidth" | "cancelVideoFrameCallback" | "getVideoPlaybackQuality" | "requestVideoFrameCallback" | "buffered" | "controls" | "crossOrigin" | "currentSrc" | "defaultMuted" | "defaultPlaybackRate" | "disableRemotePlayback" | "loop" | "mediaKeys" | "networkState" | "onencrypted" | "onwaitingforkey" | "playbackRate" | "played" | "preservesPitch" | "remote" | "sinkId" | "srcObject" | "textTracks" | "addTextTrack" | "canPlayType" | "fastSeek" | "setMediaKeys" | "setSinkId" | "NETWORK_EMPTY" | "NETWORK_IDLE" | "NETWORK_LOADING" | "NETWORK_NO_SOURCE" | "HAVE_NOTHING" | "HAVE_METADATA" | "HAVE_CURRENT_DATA" | "HAVE_FUTURE_DATA" | "HAVE_ENOUGH_DATA" | "videoTracks" | "audioTracks" | "addVideoTrack" | "addAudioTrack" | "removeVideoTrack" | "removeAudioTrack" | "videoRenditions" | "audioRenditions"> & {} & Partial<Omit<MuxVideoAds, keyof HTMLElement | "connectedCallback" | "disconnectedCallback" | "attributeChangedCallback" | "adoptedCallback">> & React.RefAttributes<MuxVideoAds>>;
export default _default;
